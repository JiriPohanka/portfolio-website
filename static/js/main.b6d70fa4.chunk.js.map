{"version":3,"sources":["components/BackgroundWrap.js","components/Header/navItems.js","components/Header/StyledLogoWrap.js","components/Header/StyledToggleWrap.js","components/Header/Nav.js","components/Header/MobileNav.js","components/Header/NightModeButton.js","components/Header/Header.js","components/StyledSection.js","vars.js","components/H1.js","components/DottedArrow.js","components/TxtType.js","components/Welcome.js","components/H2.js","components/TechStack.js","components/ProjectGrid.js","images/personal-portfolio-thumbnail.png","components/projectItems.js","components/ProjectCard.js","components/Portfolio.js","svg/github-black.svg","svg/linkedin-black.svg","components/Contact.js","theme.js","App.js","index.js"],"names":["BackgroundWrap","props","activeSection","className","navItems","title","link","StyledLogoWrap","styled","div","theme","header","wrap","logoWrap","StyledToggleWrap","toggleWrap","Nav","children","useContext","ThemeContext","content","map","item","index","nav","bgrColorActive","bgrColor","offset","href","MobileNav","setShowMenu","closeNav","onClick","NightModeButton","darkMode","setDarkMode","HeaderWrap","Header","setActiveSection","useState","window","innerWidth","mobileOn","setMobileOn","showMenu","useEffect","html","document","querySelector","style","overflow","addEventListener","fullHeader","mobileHeader","e","StyledSection","section","VARS","ids","welcomeSec","techStackSec","portfolioSec","contactSec","H1","h1","display","DottedArrow","direction","ArrowSpan","span","TxtType","el","toRotate","period","this","loopNum","parseInt","txt","tick","bind","isDeleting","i","fullTxt","substring","length","textContent","that","delta","Math","random","setTimeout","Welcome","observer","welcomeSection","useRef","typeEl","spanEl","observe","current","toUpperCase","ref","id","H2","h2","StackDiv","TechStack","techStackSection","join","ProjectGrid","gridItems","projectItems","description","thumb","thumb1","techStack","thumb2","thumb3","thumb4","CardInfoWrap","projectCard","bgrCol","CardTitle","h3","CardDesc","p","CardStack","ProjectCard","projectItem","src","Portfolio","porfolioSection","viewMode","setViewMode","viewToGridBtn","viewToCompactBtn","viewToCarouselBtn","preventDefault","Contact","contactSection","GithubIcon","LinkedinIcon","lightTheme","darkTheme","App","IntersectionObserver","elArr","sections","entries","isIntersecting","target","threshold","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b6d70fa4.chunk.js","sourcesContent":["const BackgroundWrap = (props) => {\n    const { activeSection } = props\n\n    return (\n        <div className=\"absolute top-0 h-full\">\n            <div className={`absolute top-0 h-full w-screen bg-gradient-to-r from-teal-200 via-teal-100 to-teal-200 ${activeSection === 0 ? `animate-fadeIn` : `animate-fadeOut`}`} />\n            <div className={`absolute top-0 h-full w-screen bg-gradient-to-r from-yellow-200 via-yellow-100 to-yellow-200 ${activeSection === 1 ? `animate-fadeIn` : `animate-fadeOut`}`} />\n            <div className={`absolute top-0 h-full w-screen bg-gradient-to-r from-red-200 via-red-100 to-red-200 ${activeSection === 2 ? `animate-fadeIn` : `animate-fadeOut`}`} />\n            <div className={`absolute top-0 h-full w-screen bg-gradient-to-r from-gray-200 via-gray-100 to-gray-200 ${activeSection === 3 ? `animate-fadeIn` : `animate-fadeOut`}`} />\n        </div>\n    )\n}\n\nexport default BackgroundWrap\n","const navItems = [\n    {\n        title: \"welcome\",\n        link: \"#welcome\"\n    },\n    {\n        title: \"techstack\",\n        link: \"#techstack\"\n    },\n    {\n        title: \"portfolio\",\n        link: \"#portfolio\"\n    },\n    {\n        title: \"contact\",\n        link: \"#contact\"\n    }\n]\n\nexport default navItems","import styled from \"styled-components\"\n\nconst StyledLogoWrap = styled.div(({ activeSection, theme }) => theme.header.wrap.logoWrap[activeSection])\n\nexport default StyledLogoWrap\n","import styled from \"styled-components\"\n\nconst StyledToggleWrap = styled.div(({ activeSection, theme }) => theme.header.wrap.toggleWrap[activeSection])\n\nexport default StyledToggleWrap\n","import AnchorLink from 'react-anchor-link-smooth-scroll'\nimport { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\n\nconst Nav = (props) => {\n    const { className, children, activeSection } = props\n\n    const theme = useContext(ThemeContext)\n\n    const content =\n        <ul className='flex m-auto'>\n            {children.map((item, index) =>\n                <li key={index} className={`${activeSection === index ? theme.header.nav.bgrColorActive[activeSection] : theme.header.nav.bgrColor}`}>\n                    <AnchorLink offset='56' href={item.link}>\n                        {item.title}\n                    </AnchorLink>\n                </li>\n            )\n            }\n        </ul>\n\n    return (\n        <>\n            {content}\n        </>\n    )\n}\n\nexport default Nav\n","import AnchorLink from 'react-anchor-link-smooth-scroll'\nimport { useContext } from 'react'\nimport { ThemeContext } from 'styled-components'\n\nconst MobileNav = (props) => {\n    const { setShowMenu, children, activeSection } = props\n\n    const theme = useContext(ThemeContext)\n\n    const closeNav = () => {\n        setShowMenu(() => false)\n    }\n\n    const content =\n        <div className='absolute w-screen h-screen flex flex-col bg-gray-200'>\n            <button onClick={closeNav}>close</button>\n            <ul className='w-screen h-screen flex m-auto sm:flex flex-col'>\n                {children.map((item, index) =>\n                    <li key={index} className={`${activeSection === index ? theme.header.nav.bgrColorActive[activeSection] : theme.header.nav.bgrColor}`}>\n                        <AnchorLink offset='56' href={item.link} onClick={closeNav}>\n                            {item.title}\n                        </AnchorLink>\n                    </li>\n                )\n                }\n            </ul>\n        </div>\n\n    return (\n        <>\n            {content}\n        </>\n    )\n}\n\nexport default MobileNav\n","const NightModeButton = ({ darkMode, setDarkMode }) => {\n\n    const handleClick = () => {\n        setDarkMode(!darkMode)\n    }\n\n    return (\n        <button className=\"ml-auto\" onClick={handleClick}>\n            {darkMode ? \"lightmode\" : \"darkmode\"}\n        </button>\n    )\n}\n\nexport default NightModeButton\n","import styled from \"styled-components\"\nimport { useState, useEffect } from \"react\"\nimport navItems from './navItems'\nimport StyledLogoWrap from './StyledLogoWrap'\nimport StyledToggleWrap from './StyledToggleWrap'\nimport Nav from './Nav'\nimport MobileNav from \"./MobileNav\"\nimport NightModeButton from \"./NightModeButton\"\n\nconst HeaderWrap = styled.header(({ className, activeSection, theme }) =>\n    `color: black;\n    `\n)\n\nconst Header = (props) => {\n    const { activeSection, setActiveSection } = props\n    const { darkMode, setDarkMode } = props\n    const [mobileOn, setMobileOn] = useState(window.innerWidth < 768)\n    const [showMenu, setShowMenu] = useState(false)\n\n    useEffect(() => {\n        const html = document.querySelector('html')\n\n        if (showMenu) {\n            html.style.overflow = 'hidden'\n        } else {\n            html.style.overflow = 'scroll'\n        }\n    })\n\n    useEffect(() => {\n        window.addEventListener('resize', () => setMobileOn(() => window.innerWidth < 768))\n    })\n\n    const handleClick = (e) => {\n        setShowMenu(() => true)\n    }\n\n    const isMobile = () => {\n        if (window.innerWidth < 768) return true\n        return false\n    }\n\n    const fullHeader =\n        <HeaderWrap className=\"flex sticky top-0 z-20 backdrop-filter backdrop-blur\" activeSection={activeSection}>\n            <StyledLogoWrap className=\"flex w-2/5 p-4 mr-auto\" activeSection={activeSection}>\n                jiripohanka\n            </StyledLogoWrap>\n            <Nav activeSection={activeSection} setActiveSection={setActiveSection} children={navItems} />\n            <StyledToggleWrap className=\"flex w-2/5 p-4 ml-auto\" activeSection={activeSection}>\n                <NightModeButton darkMode={darkMode} setDarkMode={setDarkMode} />\n            </StyledToggleWrap>\n        </HeaderWrap>\n\n    const mobileHeader =\n        <HeaderWrap className=\"flex sticky top-0 z-20 backdrop-filter backdrop-blur\" activeSection={activeSection}>\n            <StyledLogoWrap className=\"flex w-3/5 p-4 mr-auto\" activeSection={activeSection}>\n                jiripohanka\n            </StyledLogoWrap>\n            <StyledToggleWrap className=\"flex w-2/5 p-4 ml-auto\" activeSection={activeSection}>\n                <button className=\"ml-auto\" onClick={handleClick}>burger</button>\n            </StyledToggleWrap>\n\n            {showMenu &&\n                <>\n                    <MobileNav activeSection={activeSection} setActiveSection={setActiveSection} children={navItems} showMenu={showMenu} setShowMenu={setShowMenu} />\n                    <StyledToggleWrap className=\"flex w-2/5 p-4 ml-auto\" activeSection={activeSection}>\n                        <NightModeButton darkMode={darkMode} setDarkMode={setDarkMode} />\n                    </StyledToggleWrap>\n                </>}\n        </HeaderWrap>\n\n    return (\n        mobileOn ? mobileHeader : fullHeader\n    )\n}\n\nexport default Header\n","import styled from \"styled-components\"\n\nconst StyledSection = styled.section(({ activeSection, theme }) => theme.section.bgrColor)\n\nexport default StyledSection\n","const VARS = {\n    ids: {\n        welcomeSec: \"welcome\",\n        techStackSec: \"techstack\",\n        portfolioSec: \"portfolio\",\n        contactSec: \"contact\",\n    }\n}\n\nexport default VARS\n","import styled from \"styled-components\"\n\nconst H1 = styled.h1(({ display, activeSection, theme }) => `\ntext-align: center;\nfont-size: 10vw;\npadding-bottom: 2rem;\nline-height: 1.2;\nfont-family: 'Lato', sans-serif;\nfont-weight: 100;\n${display ? \"display: \" + display : \"\"}\n`)\n\nexport default H1\n","import styled from \"styled-components\"\n\nconst DottedArrow = (props) => {\n\n    const { direction } = props\n\n    const ArrowSpan = styled.span`\n    font-size: 4rem;\n    font-family: 'Lato', sans-serif;\n    font-weight: 100;\n    display: block;\n    line-height: 0;\n    padding: 1rem;\n    position: relative;\n    text-align: center;\n    ${direction === \"down\" && \"transform: rotate(-90deg);\"}\n    `\n\n\n    return (\n        <div className=\"flex flex-col animate-bounce\">\n            <ArrowSpan className=\"left-0.5 top-2\">\n                -\n            </ArrowSpan>\n            <ArrowSpan>\n                &lt;\n            </ArrowSpan>\n        </div>\n    )\n}\n\nexport default DottedArrow\n","class TxtType {\n    constructor(el, toRotate, period) {\n        this.toRotate = toRotate;\n        this.el = el;\n        this.loopNum = 0;\n        this.period = parseInt(period, 10) || 2000;\n        this.txt = '';\n        this.tick = this.tick.bind(this);\n        this.tick();\n        this.isDeleting = false;\n    }\n\n    tick() {\n        let i = this.loopNum\n        var fullTxt = this.toRotate[i];\n\n        if (this.isDeleting) {\n            this.txt = fullTxt.substring(0, this.txt.length - 1);\n        } else {\n            this.txt = fullTxt.substring(0, this.txt.length + 1);\n        }\n\n        this.el.textContent = this.txt\n\n        var that = this;\n        var delta = 200 - Math.random() * 100;\n\n        if (this.isDeleting) { delta /= 2; }\n\n        if (!this.isDeleting && this.txt === fullTxt) {\n            delta = this.period;\n            this.isDeleting = true;\n        } else if (this.isDeleting && this.txt === '') {\n            this.isDeleting = false;\n            this.loopNum < this.toRotate.length - 1 ? this.loopNum++ : this.loopNum = 0;\n            delta = 500;\n        }\n\n        setTimeout(function () {\n\n            that.tick();\n        }, delta);\n    }\n}\n\nexport default TxtType\n","import { useRef, useEffect } from 'react';\nimport StyledSection from './StyledSection';\nimport VARS from '../vars';\nimport H1 from './H1';\nimport DottedArrow from './DottedArrow';\nimport TxtType from './TxtType';\n// import TypedText from './TypedText';\n\nconst Welcome = ({ activeSection, observer }) => {\n\n    const { ids } = VARS\n    const welcomeSection = useRef()\n    const typeEl = useRef()\n    const spanEl = useRef()\n\n    useEffect(() => {\n        observer.observe(welcomeSection.current)\n    }, [activeSection])\n\n\n    const toRotate = [\"...\",\n        \"Hello World\",\n        \"Jiri here\",\n        \"This Is My Portfolio Website\",\n        \"I Like JS\",\n        \"I Enjoy React\",\n        \"I like turtles\"].map(el => el.toUpperCase())\n\n    // window.onload = function () {\n    //     // new TxtType(typeEl.current, toRotate, 2000);\n    //     new TxtType(spanEl.current, toRotate, 2000);\n    // }\n\n    useEffect(() => {\n        new TxtType(spanEl.current, toRotate, 2000);\n    }, [])\n\n    return (\n        <StyledSection activeSection={activeSection} ref={welcomeSection} id={`${ids.welcomeSec}`} className=\"min-h-screen py-14 -mt-14\">\n            <div className=\"flex justify-center max-w-50\">\n                <H1 display=\"inline-block\" ref={typeEl}>\n                    {/* <TypedText textArr={toRotate} /> */}\n                    <span className='wrap' ref={spanEl}></span>\n                </H1>\n                {/* <span className='wrap animate-blink' /> */}\n            </div>\n            <div className='absolute bottom-10'>\n                <DottedArrow direction=\"down\" />\n            </div>\n        </StyledSection >\n    )\n}\n\nexport default Welcome\n","import styled from \"styled-components\"\n\nconst H2 = styled.h2(({ activeSection, theme }) => `\nfont-size: 2rem;\n`)\n\nexport default H2","import StyledSection from \"./StyledSection\"\nimport H2 from \"./H2\"\nimport { useEffect, useRef } from \"react\"\nimport VARS from \"../vars\"\nimport styled from \"styled-components\"\n\nconst StackDiv = styled.div(({ theme }) =>\n    `display: flex;\n    white-space: pre-wrap;\n    padding-top: 1rem;\n`)\n\nconst TechStack = (props) => {\n\n    const { ids } = VARS\n    const { activeSection, observer } = props\n    const techStackSection = useRef()\n\n    useEffect(() => {\n        observer.observe(techStackSection.current)\n    }, [activeSection])\n\n    const strongStack = [\"react\", \"js\", \"git\", \"tailwind\", \"styled-components\"]\n    const famStack = [\"gatsby\", \"jest\", \"cypress\", \"react-beautiful-dnd\"]\n    const planStack = [\"next\", \"ts\", \"react-testing-library\"]\n\n    return (\n        <StyledSection activeSection={activeSection} ref={techStackSection} id={`${ids.techStackSec}`} className=\"min-h-screen\">\n            <div className=\"absolute flex flex-col items-center justify-center\">\n\n                <H2>Future Rockstar Front-End Developer Here.</H2>\n                <StackDiv>\n                    <p>\n                        <span>I am quite confident working with </span>\n                        <span className=\"font-semibold\">{strongStack.join(\", \")}.</span>\n                    </p>\n                </StackDiv>\n                <StackDiv>\n                    <p>\n                        <span>I have experimented with and familiar with </span>\n                        <span className=\"font-semibold\">{famStack.join(\", \")}.</span>\n                    </p>\n                </StackDiv>\n                <StackDiv>\n                    <p>\n                        <span>In 2022, I intend to look into </span>\n                        <span className=\"font-semibold\">{planStack.join(\", \")} and much more.</span>\n                    </p>\n                </StackDiv>\n            </div>\n        </StyledSection >\n    )\n}\n\nexport default TechStack\n","const ProjectGrid = ({ gridItems }) => {\n\n    return (\n        <div className=\"grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-2 gap-8 p-4\">\n            {gridItems}\n        </div>\n    )\n}\n\nexport default ProjectGrid\n","export default __webpack_public_path__ + \"static/media/personal-portfolio-thumbnail.312cc47a.png\";","import thumb1 from \"../images/personal-portfolio-thumbnail.png\"\nimport thumb2 from \"../images/personal-portfolio-thumbnail.png\"\nimport thumb3 from \"../images/personal-portfolio-thumbnail.png\"\nimport thumb4 from \"../images/personal-portfolio-thumbnail.png\"\n\nconst projectItems = [\n    {\n        title: \"Personal Portfolio\",\n        description: \"The very website you currently find yourself on.\",\n        thumb: thumb1,\n        techStack: \"ReactJS, styled-components, tailwindCSS\"\n    },\n    {\n        title: \"To Do list\",\n        description: \"Every beginner needs to build their own to-do list app, right? I built mine following the design provided by FrontEnd Mentor.\",\n        thumb: thumb2,\n        techStack: \"ReactJS, react-beautiful-dnd, CSS3\"\n    },\n    {\n        title: \"Agra Řisuty\",\n        description: \"A website I build for a medium-sized agricultural company that operates in central Bohemia.\",\n        thumb: thumb3,\n        techStack: \"ReactJS, tailwindCSS\"\n    },\n    {\n        title: \"Bookmarx\",\n        description: \"Ever wonder what to do with those pesky browser tabs you cannot read right now but aren't ready to close just yet? A fun learning project that solves this issue.\",\n        thumb: thumb4,\n        techStack: \"ReactJS, tailwindCSS\"\n    }\n]\n\nexport default projectItems\n","import styled from \"styled-components\"\n\nconst CardInfoWrap = styled.div(({ theme }) =>\n    `display: flex;\n    flex-direction: column;\n    position: absolute;\n    background-color: ${(theme.projectCard.bgrCol)};\n    opacity: 0;\n    &:hover {\n    opacity: 1;\n    \n    `\n)\n\nconst CardTitle = styled.h3(({ theme }) =>\n    `\n    font-weight: 400;\n    font-size: 1.5rem;\n    `\n)\n\nconst CardDesc = styled.p`\n    font-size: 0.9rem;\n    font-weight: 300;\n    `\n\nconst CardStack = styled.p`\n    font-size: 0.9rem;\n    `\n\nconst ProjectCard = ({ projectItem }) => {\n\n    return (\n        <div className=\"flex rounded relative overflow-hidden md:w-80 lg:w-96\">\n            <img className=\"object-cover\" src={projectItem.thumb} />\n            <CardInfoWrap className=\"items-start justify-center h-full w-full transition-all duration-500 p-4 cursor-pointer\">\n                <CardTitle>{projectItem.title}</CardTitle>\n                <CardDesc>{projectItem.description}</CardDesc>\n                <CardStack>{projectItem.techStack}</CardStack>\n            </CardInfoWrap>\n        </div>\n\n    )\n}\n\nexport default ProjectCard\n","import { useEffect, useRef, useState } from \"react\"\nimport StyledSection from \"./StyledSection\"\nimport VARS from '../vars';\nimport H2 from \"./H2\";\nimport ProjectGrid from \"./ProjectGrid\";\nimport projectItems from \"./projectItems\";\nimport ProjectCard from \"./ProjectCard\";\n\nconst Portfolio = (props) => {\n\n    const { ids } = VARS\n    const { activeSection, observer } = props\n    const porfolioSection = useRef()\n    const [viewMode, setViewMode] = useState(\"grid\")\n\n    useEffect(() => {\n        observer.observe(porfolioSection.current)\n    }, [activeSection])\n\n    const viewToGridBtn = useRef()\n    const viewToCompactBtn = useRef()\n    const viewToCarouselBtn = useRef()\n\n    const setViewToGrid = (e) => {\n        e.preventDefault()\n        setViewMode(() => \"grid\")\n    }\n\n    const setViewToCompact = (e) => {\n        e.preventDefault()\n        setViewMode(() => \"compact\")\n    }\n\n    const setViewToCarousel = (e) => {\n        e.preventDefault()\n        setViewMode(() => \"carousel\")\n    }\n\n    const gridItems = projectItems.map((item, index) => <ProjectCard key={index} projectItem={item} />)\n\n    return (\n        <StyledSection activeSection={activeSection} id={`${ids.portfolioSec}`} className=\"min-h-screen\" ref={porfolioSection} >\n            <H2>Porfolio</H2>\n            <div>\n                <span className={viewMode === \"grid\" && \"\"} ref={viewToGridBtn} onClick={setViewToGrid}>grid</span>\n                <span ref={viewToCompactBtn} onClick={setViewToCompact}>compact</span>\n                <span ref={viewToCarouselBtn} onClick={setViewToCarousel}>carousel</span>\n            </div>\n            {viewMode === \"grid\" && <ProjectGrid gridItems={gridItems} />}\n            {viewMode === \"compact\" && <ProjectGrid gridItems={gridItems} />}\n            {viewMode === \"carousel\" && <ProjectGrid gridItems={gridItems} />}\n        </StyledSection >\n    )\n}\n\nexport default Portfolio\n","export default __webpack_public_path__ + \"static/media/github-black.d9c5ace8.svg\";","export default __webpack_public_path__ + \"static/media/linkedin-black.51f5dd89.svg\";","import { useRef, useEffect } from \"react\"\nimport StyledSection from \"./StyledSection\"\nimport VARS from '../vars';\nimport GithubIcon from '../svg/github-black.svg';\nimport LinkedinIcon from '../svg/linkedin-black.svg';\nimport H2 from \"./H2\";\n\n// import theme from '../theme'\n\nconst Contact = (props) => {\n\n    const { ids } = VARS\n    // const { contact } = theme.sections\n\n    const { activeSection, observer } = props\n    const contactSection = useRef()\n\n    useEffect(() => {\n        observer.observe(contactSection.current)\n    }, [activeSection])\n\n    return (\n        <StyledSection activeSection={activeSection} ref={contactSection} id={`${ids.contactSec}`} className='h-screen'>\n            <H2>Contact me</H2>\n            <div>\n                <div>\n                    <img src={GithubIcon} />\n                </div>\n                <div>\n                    <img src={LinkedinIcon} />\n                </div>\n            </div>\n        </StyledSection >\n    )\n}\n\nexport default Contact\n","import tw from 'twin.macro'\n\nconst lightTheme = {\n    projectCard: {\n        bgrCol: \"white\"\n    },\n    header: {\n        wrap: {\n            logoWrap: {\n                0: tw`bg-transparent`,\n                1: tw`bg-transparent`,\n                2: tw`bg-transparent`,\n                3: tw`bg-transparent`,\n            },\n            toggleWrap: {\n                0: tw`bg-transparent`,\n                1: tw`bg-transparent`,\n                2: tw`bg-transparent`,\n                3: tw`bg-transparent`,\n            },\n        },\n        nav: {\n            bgrColorActive: {\n                0: `bg-transparent transition-colors duration-1000 font-bold text-gray-900 p-4 hover:bg-transparent`,\n                1: `bg-transparent transition-colors duration-1000 font-bold text-gray-900 p-4 hover:bg-transparent`,\n                2: `bg-transparent transition-colors duration-1000 font-bold text-gray-900 p-4 hover:bg-transparent`,\n                3: `bg-transparent transition-colors duration-1000 font-bold text-gray-900 p-4 hover:bg-transparent`,\n            },\n            bgrColor: `bg-transparent transition-colors duration-500 text-gray-700 p-4`,\n        }\n    },\n    section: {\n        bgrColor: tw`bg-transparent relative z-10 flex flex-col justify-center items-center`\n    },\n    h1: tw`text-4xl`\n}\n\n\nconst darkTheme = {\n    projectCard: {\n        bgrCol: \"black\"\n    },\n    header: {\n        wrap: {\n            0: tw`flex items-stretch sticky top-0 z-20 text-gray-100 transition-colors duration-500`,\n            1: tw`flex sticky top-0 text-gray-100 z-20 transition-colors duration-500`,\n            2: tw`flex sticky top-0 text-gray-700 z-20 transition-colors duration-500`,\n            logoWrap: {\n                0: tw`flex w-2/5 p-4 bg-gray-900 mr-auto`,\n                1: tw`flex w-2/5 p-4 bg-gray-900 mr-auto`,\n                2: tw`flex w-2/5 p-4 bg-gray-900 mr-auto`,\n            },\n            toggleWrap: {\n                0: tw`flex w-2/5 p-4 bg-gray-900 ml-auto`,\n                1: tw`flex w-2/5 p-4 bg-gray-900 ml-auto`,\n                2: tw`flex w-2/5 p-4 bg-gray-900 ml-auto`,\n            },\n        },\n        nav: {\n            bgrColorActive: {\n                0: `bg-transparent transition-colors duration-500 text-gray-900 p-4`,\n                1: `bg-transparent transition-colors duration-500 text-gray-900 p-4`,\n                2: `bg-transparent text-white p-4`,\n            },\n            bgrColor: {\n                0: `bg-gray-900 transition-colors duration-500 text-gray-300 p-4 hover:bg-gray-300`,\n                1: `bg-gray-900 transition-colors duration-500 text-black p-4 hover:bg-gray-300`,\n                2: `bg-gray-900 text-white p-4 hover:bg-gray-300`,\n            }\n        }\n    },\n    section: {\n        bgrColor: {\n            0: tw`bg-transparent relative z-10 flex flex-col justify-center items-center`,\n            1: tw`bg-transparent relative z-10 flex flex-col justify-center items-center`,\n            2: tw`bg-transparent relative z-10 flex flex-col justify-center items-center`,\n        }\n    },\n}\n\n\n\nexport { lightTheme, darkTheme }\n","import BackgroundWrap from './components/BackgroundWrap';\nimport Header from './components/Header/Header';\nimport Welcome from './components/Welcome';\nimport TechStack from './components/TechStack';\nimport Portfolio from './components/Portfolio';\nimport Contact from './components/Contact';\nimport VARS from './vars'\nimport { useState } from 'react';\nimport { ThemeProvider } from 'styled-components';\nimport { lightTheme, darkTheme } from './theme'\n\nconst App = () => {\n\n  const [activeSection, setActiveSection] = useState(0)\n  const [darkMode, setDarkMode] = useState(false)\n\n  const observer = new IntersectionObserver((elArr) => {\n    const sections = {}\n    const { ids } = VARS\n    sections[ids.welcomeSec] = 0\n    sections[ids.techStackSec] = 1\n    sections[ids.portfolioSec] = 2\n    sections[ids.contactSec] = 3\n\n    for (let [i, el] of elArr.entries()) {\n      if (el.isIntersecting) {\n        setActiveSection(() => sections[el.target.id])\n      }\n    }\n  }, { threshold: [0.7] })\n\n  const theme = darkMode ? darkTheme : lightTheme\n\n  return (\n    <ThemeProvider theme={theme}>\n      <BackgroundWrap activeSection={activeSection} />\n      <Header activeSection={activeSection} setActiveSection={setActiveSection} darkMode={darkMode} setDarkMode={setDarkMode} />\n      <Welcome observer={observer} activeSection={activeSection} setActiveSection={setActiveSection} />\n      <TechStack observer={observer} activeSection={activeSection} setActiveSection={setActiveSection} />\n      <Portfolio observer={observer} activeSection={activeSection} setActiveSection={setActiveSection} />\n      <Contact observer={observer} activeSection={activeSection} setActiveSection={setActiveSection} />\n    </ThemeProvider >\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}